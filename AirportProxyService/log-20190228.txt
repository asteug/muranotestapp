2019-02-28 00:00:24.708 +05:00 [Information] Application started
2019-02-28 00:00:25.193 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 00:00:50.166 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 00:03:31.501 +05:00 [Information] Application started
2019-02-28 00:03:31.963 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 00:08:38.374 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 00:18:20.969 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 00:18:48.843 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 02:31:15.680 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 04:01:40.810 +05:00 [Information] Application started
2019-02-28 04:01:41.415 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 04:04:41.396 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 04:06:25.357 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 04:08:55.075 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 04:09:47.830 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 05:30:13.804 +05:00 [Information] Application started
2019-02-28 05:30:14.255 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 05:34:37.731 +05:00 [Information] Application started
2019-02-28 05:34:38.213 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 05:37:41.194 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 05:40:00.481 +05:00 [Error] SearchAirport exception handler
 Specified argument was out of the range of valid values.
Parameter name: cancellationToken 
 Inner exception: 
System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.
Parameter name: cancellationToken
   at System.Threading.Tasks.Task.FromCancellation[TResult](CancellationToken cancellationToken)
   at System.Threading.Tasks.Task.FromCanceled[TResult](CancellationToken cancellationToken)
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 05:47:12.674 +05:00 [Information] Application started
2019-02-28 05:47:13.619 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 05:51:55.343 +05:00 [Information] Application started
2019-02-28 05:51:55.738 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 06:32:34.422 +05:00 [Information] Application started
2019-02-28 06:32:34.858 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 06:35:52.859 +05:00 [Information] Application started
2019-02-28 06:35:53.466 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 06:37:09.097 +05:00 [Information] Application started
2019-02-28 06:37:09.485 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 09:54:32.939 +05:00 [Information] Application started
2019-02-28 09:54:33.359 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 09:56:03.398 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 09:57:56.958 +05:00 [Information] Application started
2019-02-28 09:57:57.416 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 10:00:11.417 +05:00 [Information] Application started
2019-02-28 10:00:11.866 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 10:01:15.056 +05:00 [Information] Application started
2019-02-28 10:01:15.546 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 10:21:32.529 +05:00 [Information] Application started
2019-02-28 10:21:32.976 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 10:23:12.098 +05:00 [Information] Application started
2019-02-28 10:23:12.540 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 10:27:22.642 +05:00 [Information] Application started
2019-02-28 10:27:23.131 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 10:27:49.053 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter) in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Deserializers\DeserializeJson.cs:line 20
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\ApiIntegration\RouteApiIntegrationMethods.cs:line 43
2019-02-28 10:27:49.119 +05:00 [Error] SearchAirport exception handler
 Value cannot be null.
Parameter name: collection 
 Inner exception: 
System.ArgumentNullException: Value cannot be null.
Parameter name: collection
   at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)
   at System.Collections.Generic.List`1.AddRange(IEnumerable`1 collection)
   at AirportProxyService.Controllers.SearchController.<>c__DisplayClass7_5.<<SearchDestinations>b__23>d.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Controllers\SearchController.cs:line 143
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Controllers\SearchController.cs:line 147
2019-02-28 10:28:10.138 +05:00 [Error] GetAllRoutesAsync exception handler
 Thread was being aborted. 
 Inner exception: 
System.Threading.ThreadAbortException: Thread was being aborted.
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitUnsafeOnCompleted[TAwaiter,TStateMachine](TAwaiter& awaiter, TStateMachine& stateMachine)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\ApiIntegration\RouteApiIntegrationMethods.cs:line 41
2019-02-28 10:28:38.103 +05:00 [Error] GetAllRoutesAsync exception handler
 Thread was being aborted. 
 Inner exception: 
System.Threading.ThreadAbortException: Thread was being aborted.
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitUnsafeOnCompleted[TAwaiter,TStateMachine](TAwaiter& awaiter, TStateMachine& stateMachine)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\ApiIntegration\RouteApiIntegrationMethods.cs:line 41
2019-02-28 12:44:50.462 +05:00 [Information] Application started
2019-02-28 12:44:50.923 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 12:56:55.040 +05:00 [Information] Application started
2019-02-28 12:56:55.475 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 13:46:53.214 +05:00 [Information] Application started
2019-02-28 13:46:53.650 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 13:49:39.224 +05:00 [Information] Application started
2019-02-28 13:49:39.650 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 13:50:24.333 +05:00 [Information] Application started
2019-02-28 13:50:24.767 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 13:51:56.863 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 13:52:25.927 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:52:25.980 +05:00 [Error] SearchAirport exception handler
 Value cannot be null.
Parameter name: source 
 Inner exception: 
System.ArgumentNullException: Value cannot be null.
Parameter name: source
   at System.Linq.Enumerable.Select[TSource,TResult](IEnumerable`1 source, Func`2 selector)
   at AirportProxyService.Controllers.SearchController.<>c__DisplayClass7_2.<<SearchDestinations>b__6>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 13:53:11.416 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:11.544 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:11.599 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:11.695 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:11.782 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:11.927 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:12.310 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:12.431 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:12.698 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:12.889 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:13.272 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:13.331 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:13.677 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:14.037 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:14.611 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:14.901 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext()
2019-02-28 13:53:18.709 +05:00 [Error] SearchAirport exception handler
 Value cannot be null.
Parameter name: source 
 Inner exception: 
System.ArgumentNullException: Value cannot be null.
Parameter name: source
   at System.Linq.Enumerable.Select[TSource,TResult](IEnumerable`1 source, Func`2 selector)
   at AirportProxyService.Controllers.SearchController.<>c__DisplayClass7_2.<<SearchDestinations>b__6>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 13:54:51.880 +05:00 [Information] Application started
2019-02-28 13:54:52.306 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 13:55:26.078 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter) in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Deserializers\DeserializeJson.cs:line 20
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\ApiIntegration\RouteApiIntegrationMethods.cs:line 43
2019-02-28 13:55:27.831 +05:00 [Error] SearchAirport exception handler
 Value cannot be null.
Parameter name: source 
 Inner exception: 
System.ArgumentNullException: Value cannot be null.
Parameter name: source
   at System.Linq.Enumerable.Select[TSource,TResult](IEnumerable`1 source, Func`2 selector)
   at AirportProxyService.Controllers.SearchController.<>c__DisplayClass7_2.<<SearchDestinations>b__7>d.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Controllers\SearchController.cs:line 81
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Controllers\SearchController.cs:line 91
2019-02-28 13:56:02.377 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter) in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Deserializers\DeserializeJson.cs:line 20
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\ApiIntegration\RouteApiIntegrationMethods.cs:line 43
2019-02-28 13:56:02.667 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter) in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Deserializers\DeserializeJson.cs:line 20
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\ApiIntegration\RouteApiIntegrationMethods.cs:line 43
2019-02-28 13:56:04.007 +05:00 [Error] SearchAirport exception handler
 Value cannot be null.
Parameter name: source 
 Inner exception: 
System.ArgumentNullException: Value cannot be null.
Parameter name: source
   at System.Linq.Enumerable.Select[TSource,TResult](IEnumerable`1 source, Func`2 selector)
   at AirportProxyService.Controllers.SearchController.<>c__DisplayClass7_2.<<SearchDestinations>b__7>d.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Controllers\SearchController.cs:line 81
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Controllers\SearchController.cs:line 91
2019-02-28 14:00:25.796 +05:00 [Information] Application started
2019-02-28 14:00:26.219 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 14:04:25.670 +05:00 [Information] Application started
2019-02-28 14:04:26.117 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 14:05:14.503 +05:00 [Information] Application started
2019-02-28 14:05:14.931 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 14:06:34.957 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 14:07:48.901 +05:00 [Information] Application started
2019-02-28 14:07:49.365 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 14:09:54.820 +05:00 [Information] Application started
2019-02-28 14:09:55.253 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 14:10:08.578 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Route]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter) in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Deserializers\DeserializeJson.cs:line 20
   at AirportProxyService.ApiIntegration.RouteApiIntegrationMethods.<GetAllRoutesAsync>d__4.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\ApiIntegration\RouteApiIntegrationMethods.cs:line 43
2019-02-28 14:10:08.610 +05:00 [Error] SearchAirport exception handler
 Value cannot be null.
Parameter name: source 
 Inner exception: 
System.ArgumentNullException: Value cannot be null.
Parameter name: source
   at System.Linq.Enumerable.Select[TSource,TResult](IEnumerable`1 source, Func`2 selector)
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Controllers\SearchController.cs:line 68
2019-02-28 14:12:12.073 +05:00 [Information] Application started
2019-02-28 14:12:12.583 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 14:23:42.323 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 14:23:43.175 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Airport]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Airport]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter)
   at AirportProxyService.ApiIntegration.AirportApiIntegrationMethods.<GetAllAirportByPatternAsync>d__4.MoveNext()
2019-02-28 14:47:01.919 +05:00 [Information] Application started
2019-02-28 14:47:02.554 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 16:02:53.075 +05:00 [Information] Application started
2019-02-28 16:02:53.540 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 16:03:54.716 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 16:05:45.867 +05:00 [Information] Application started
2019-02-28 16:05:46.363 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 16:07:58.730 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Helpers.StaticClass.GetChain(List`1 routes, String source, String destination)
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 16:08:18.027 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Helpers.StaticClass.GetChain(List`1 routes, String source, String destination)
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 16:08:35.722 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Helpers.StaticClass.GetChain(List`1 routes, String source, String destination)
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 16:08:53.005 +05:00 [Error] SearchAirport exception handler
 Object reference not set to an instance of an object. 
 Inner exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AirportProxyService.Helpers.StaticClass.GetChain(List`1 routes, String source, String destination)
   at AirportProxyService.Controllers.SearchController.<SearchDestinations>d__7.MoveNext()
2019-02-28 16:10:28.463 +05:00 [Information] Application started
2019-02-28 16:10:28.839 +05:00 [Information] Method type: GET 
 Action: Search
 Action: Index
2019-02-28 16:10:56.210 +05:00 [Error] GetAllRoutesAsync exception handler
 Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Airport]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11. 
 Inner exception: 
Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.List`1[AirportProxyService.Models.Airport]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
Path 'message', line 1, position 11.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)
   at AirportProxyService.Deserializers.DeserializeJson.DeserializeObject[T](String json, JsonConverter converter) in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\Deserializers\DeserializeJson.cs:line 20
   at AirportProxyService.ApiIntegration.AirportApiIntegrationMethods.<GetAllAirportByPatternAsync>d__4.MoveNext() in C:\Users\AE\source\repos\AirportProxyService\AirportProxyService\ApiIntegration\AirportApiIntegrationMethods.cs:line 45
